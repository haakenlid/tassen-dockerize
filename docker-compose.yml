version: '2'
services:
  django:
    build: ./django/
    volumes:
      - ./django:/app
      - ./static:/static
      - ./media:/media
      - ./logs:/logs
      - ./build:/build
    env_file: dev.env

  web:
    extends: django
    restart: always
    command: uwsgi
    links:
      - postgres
      - redis
      - rabbit
    expose:
      - "8000"
    ports:
      - "8000:8000"

  celery:
    extends: django
    restart: always
    command: celery
    links:
      - postgres
      - redis
      - rabbit

  celerybeat:
    extends: django
    restart: always
    command: celerybeat
    links:
      - rabbit

  nginx:
    build: ./nginx/
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./static:/static
      - ./media:/media
      - ./logs:/logs
    links: 
      - web

  nodejs:
    build: ./nodejs/
    volumes:
      - ./build:/build
      - ./nodejs:/app
      - node_modules:/app/node_modules
    command: "true"

  # RabbitMQ message queue
  # default username:password is guest:guest
  rabbit:
    image: rabbitmq:3.6

  # PostgreSQL database
  postgres:
    image: postgres:9.6
    volumes:
      - pgdata:/var/lib/postgresql/data/

  # Redis key value store
  redis:
    image: redis:3.2
    volumes:
      - redisdata:/data

volumes:
  redisdata: {}
  pgdata: {}
  node_modules: {}
