version: '2.1'
services:
  django:
    build: ./django/
    volumes:
      - ./django:/app
      - ./logs:/var/logs
      - webpack_build:/var/build/
      - django_static:/var/static/
      - django_media:/var/media/
    env_file:
      - ./common.env
      - ./deployment.env
    environment:
      - BUILD_DIR=/var/build/
      - LOG_DIR=/var/logs/
      - STATIC_DIR=/var/static/
      - MEDIA_DIR=/var/media/

  web:
    extends: django
    restart: always
    command: uwsgi
    expose:
      - "8000"  # wsgi on tcp socket
    depends_on:
      - postgres
      - redis
      - rabbit

  celery:
    extends: django
    restart: always
    command: celery
    depends_on:
      - postgres
      - redis
      - rabbit

  celerybeat:
    extends: django
    restart: always
    command: celerybeat
    depends_on:
      - rabbit

  nginx:
    build: ./nginx/
    restart: always
    volumes:
      - django_static:/var/static/
      - django_media:/var/media/
    ports:
      - "${EXTERNAL_PORT:-8080}:80"

  nodejs:
    build: ./nodejs/
    volumes:
      - ./nodejs:/app/
      - webpack_build:/var/build/
      - node_modules:/app/node_modules/
    environment:
      - BUILD_DIR=/var/build/
    command: "true"  # noop

  # RabbitMQ message queue
  # default username:password is guest:guest
  rabbit:
    image: rabbitmq:3.6

  # PostgreSQL database
  postgres:
    image: postgres:9.6
    volumes:
      - pgdata:/var/lib/postgresql/data/

  # Redis key value store
  redis:
    image: redis:3.2
    volumes:
      - redisdata:/data/

volumes:
  redisdata: {}
  pgdata: {}
  node_modules: {}
  webpack_build: {}
  django_media: {}
  django_static: {}
